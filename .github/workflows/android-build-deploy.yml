name: Android Build and Deploy

on:
  workflow_dispatch:
    inputs:
      release_channel:
        description: 'Release channel'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - preview
          - development

jobs:
  build-and-deploy:
    name: Build and Deploy Android App
    runs-on: ubuntu-latest
    
    steps:
      - name: Check for EXPO_TOKEN
        run: |
          if [ -z "${{ secrets.EXPO_TOKEN }}" ]; then
            echo "‚ùå You must provide an EXPO_TOKEN secret linked to this project's Expo account in this repo's secrets."
            echo "Learn more: https://docs.expo.dev/eas-update/github-actions"
            exit 1
          fi

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          # cache: 'npm'  # Disabled due to GitHub cache service issues

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup EAS
        uses: expo/expo-github-action@v8
        with:
          expo-version: latest
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Install dependencies
        run: |
          echo "Installing dependencies..."
          npm install --no-optional --no-audit --no-fund
        env:
          # Disable all caching mechanisms
          npm_config_cache: /tmp/npm-cache
          npm_config_prefer_offline: false
          npm_config_audit: false
          npm_config_fund: false

      - name: Verify project configuration
        run: |
          echo "üîç Verifying Expo configuration..."
          npx expo config --type public

      - name: Build Android APK
        id: build-step
        run: |
          echo "üöÄ Building Android APK with profile: ${{ github.event.inputs.release_channel }}"
          
          # Start the build and capture the output
          echo "‚è≥ Starting build and waiting for completion..."
          BUILD_OUTPUT=$(eas build --platform android --profile ${{ github.event.inputs.release_channel }} --non-interactive --wait 2>&1)
          
          echo "Build output:"
          echo "$BUILD_OUTPUT"
          
          # Extract the download URL from the build output
          BUILD_URL=$(echo "$BUILD_OUTPUT" | grep -o 'https://expo.dev/artifacts/eas/[^[:space:]]*' | head -1)
          
          if [ -z "$BUILD_URL" ]; then
            echo "‚ùå Failed to extract build URL from output"
            echo "Build output was:"
            echo "$BUILD_OUTPUT"
            exit 1
          fi
          
          echo "‚úÖ Build completed successfully!"
          echo "üîó Build URL: $BUILD_URL"
          echo "build_url=$BUILD_URL" >> $GITHUB_OUTPUT
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
          EXPO_PUBLIC_SUPABASE_URL: ${{ secrets.EXPO_PUBLIC_SUPABASE_URL }}
          EXPO_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.EXPO_PUBLIC_SUPABASE_ANON_KEY }}

      - name: Download Android Build
        run: |
          echo "üì± Downloading Android build..."
          BUILD_URL="${{ steps.build-step.outputs.build_url }}"
          
          if [ -z "$BUILD_URL" ]; then
            echo "‚ùå No build URL available"
            exit 1
          fi
          
          # Determine file extension from URL
          if [[ "$BUILD_URL" == *.aab ]]; then
            FILE_EXT="aab"
            FILE_NAME="dil-tutor-app-${{ github.event.inputs.release_channel }}.aab"
          else
            FILE_EXT="apk"
            FILE_NAME="dil-tutor-app-${{ github.event.inputs.release_channel }}.apk"
          fi
          
          echo "üì¶ Downloading $FILE_EXT from: $BUILD_URL"
          
          # Download with retry mechanism
          for attempt in 1 2 3; do
            echo "üîÑ Download attempt $attempt of 3"
            if curl -L -o "$FILE_NAME" "$BUILD_URL"; then
              echo "‚úÖ $FILE_EXT downloaded successfully!"
              echo "üìÅ File: $FILE_NAME"
              ls -la "$FILE_NAME"
              echo "FILE_NAME=$FILE_NAME" >> $GITHUB_ENV
              echo "FILE_EXT=$FILE_EXT" >> $GITHUB_ENV
              break
            else
              echo "‚ùå Download failed on attempt $attempt"
              if [ $attempt -lt 3 ]; then
                echo "‚è≥ Waiting 10 seconds before retry..."
                sleep 10
              else
                echo "‚ùå All download attempts failed"
                exit 1
              fi
            fi
          done
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

      - name: Upload Android Build as GitHub artifact
        uses: actions/upload-artifact@v4
        with:
          name: dil-tutor-app-${{ github.event.inputs.release_channel }}-${{ github.run_number }}
          path: ${{ env.FILE_NAME }}
          retention-days: 30

      - name: Notify build completion
        if: always()
        run: |
          if [ "${{ job.status }}" = "success" ]; then
            echo "‚úÖ Android build completed successfully!"
            echo "üîó Build URL: ${{ steps.build-step.outputs.build_url }}"
            echo "üì¶ Profile: ${{ github.event.inputs.release_channel }}"
            echo "üìÅ File: ${{ env.FILE_NAME }}"
            echo "üì± File Type: ${{ env.FILE_EXT | upper }}"
            echo ""
            echo "üìã Next Steps:"
            echo "   1. Download ${{ env.FILE_EXT | upper }} from GitHub Actions artifacts"
            if [ "${{ env.FILE_EXT }}" = "apk" ]; then
              echo "   2. Install directly on Android devices"
              echo "   3. Distribute to testers or users"
            else
              echo "   2. Upload AAB to Google Play Console"
              echo "   3. Submit for review and release"
            fi
          else
            echo "‚ùå Android build failed"
            echo "Please check the logs above for details"
          fi

      - name: Upload build info
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-info-${{ github.run_number }}
          path: |
            package.json
            app.json
            eas.json
          retention-days: 30