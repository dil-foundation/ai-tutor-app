name: Android Build and Deploy

on:
  workflow_dispatch:
    inputs:
      release_channel:
        description: 'Release channel'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - preview
      build_type:
        description: 'Build type (APK or AAB)'
        required: true
        default: 'apk'
        type: choice
        options:
          - apk
          - aab
      deploy_target:
        description: 'Deploy target'
        required: true
        default: 'google-play'
        type: choice
        options:
          - google-play
          - github-releases
          - build-only

jobs:
  build-and-deploy:
    name: Build and Deploy Android App
    runs-on: ubuntu-latest
    
    steps:
      - name: Check for EXPO_TOKEN
        run: |
          if [ -z "${{ secrets.EXPO_TOKEN }}" ]; then
            echo "‚ùå You must provide an EXPO_TOKEN secret linked to this project's Expo account in this repo's secrets."
            echo "Learn more: https://docs.expo.dev/eas-update/github-actions"
            exit 1
          fi

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          # cache: 'npm'  # Disabled due to GitHub cache service issues

      - name: Install EAS CLI manually
        run: |
          echo "Installing EAS CLI without caching..."
          npm install -g eas-cli@latest
          eas --version
        env:
          # Disable all caching mechanisms
          npm_config_cache: /tmp/npm-cache
          npm_config_prefer_offline: false
          npm_config_audit: false
          npm_config_fund: false

      - name: Install dependencies
        run: |
          echo "Installing dependencies..."
          npm install --no-optional --no-audit --no-fund
        env:
          # Disable all caching mechanisms
          npm_config_cache: /tmp/npm-cache
          npm_config_prefer_offline: false
          npm_config_audit: false
          npm_config_fund: false

      - name: Build Android app
        run: |
          # Determine the build profile based on build type
          if [ "${{ github.event.inputs.build_type }}" = "apk" ]; then
            BUILD_PROFILE="preview"
            echo "üöÄ Building Android APK with profile: $BUILD_PROFILE"
          else
            BUILD_PROFILE="${{ github.event.inputs.release_channel }}"
            echo "üöÄ Building Android AAB with profile: $BUILD_PROFILE"
          fi
          
          eas build --platform android --profile $BUILD_PROFILE --non-interactive --wait
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
          EXPO_PUBLIC_SUPABASE_URL: ${{ secrets.EXPO_PUBLIC_SUPABASE_URL }}
          EXPO_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.EXPO_PUBLIC_SUPABASE_ANON_KEY }}
          EXPO_PUBLIC_UXCAM_API_KEY: ${{ secrets.EXPO_PUBLIC_UXCAM_API_KEY }}
          EXPO_PUBLIC_API_BASE_URL: ${{ secrets.EXPO_PUBLIC_API_BASE_URL }}
          EXPO_PUBLIC_FRONTEND_URL: ${{ secrets.EXPO_PUBLIC_FRONTEND_URL }}

      - name: Submit to Google Play Store
        if: github.event.inputs.deploy_target == 'google-play'
        run: |
          echo "üì± Submitting to Google Play Store..."
          eas submit --platform android --latest --profile ${{ github.event.inputs.release_channel }} --non-interactive
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

      - name: Create GitHub Release
        if: github.event.inputs.deploy_target == 'github-releases'
        run: |
          echo "üì¶ Creating GitHub Release..."
          # Get the latest build info
          BUILD_INFO=$(eas build:list --platform android --limit 1 --json | jq -r '.[0]')
          BUILD_ID=$(echo $BUILD_INFO | jq -r '.id')
          BUILD_VERSION=$(echo $BUILD_INFO | jq -r '.appVersion')
          BUILD_BUILD_NUMBER=$(echo $BUILD_INFO | jq -r '.buildVersion')
          
          # Create release
          gh release create "v$BUILD_VERSION+$BUILD_BUILD_NUMBER" \
            --title "DIL Tutor App v$BUILD_VERSION+$BUILD_BUILD_NUMBER" \
            --notes "Android APK build for DIL Tutor App

          **Build Details:**
          - Version: $BUILD_VERSION
          - Build Number: $BUILD_BUILD_NUMBER
          - Profile: ${{ github.event.inputs.release_channel }}
          - Platform: Android
          - Build ID: $BUILD_ID

          **Installation:**
          Download the APK file and install on your Android device.
          Make sure to enable 'Install from unknown sources' in your device settings.

          **Note:** This is an automated release created by GitHub Actions."
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Download APK for GitHub Release
        if: github.event.inputs.deploy_target == 'github-releases'
        run: |
          echo "‚¨áÔ∏è Downloading APK for GitHub Release..."
          # Get the latest build info
          BUILD_INFO=$(eas build:list --platform android --limit 1 --json | jq -r '.[0]')
          BUILD_ID=$(echo $BUILD_INFO | jq -r '.id')
          BUILD_VERSION=$(echo $BUILD_INFO | jq -r '.appVersion')
          BUILD_BUILD_NUMBER=$(echo $BUILD_INFO | jq -r '.buildVersion')
          
          # Download the APK
          eas build:download --platform android --latest --output "dil-tutor-app-v$BUILD_VERSION+$BUILD_BUILD_NUMBER.apk"
          
          # Upload to GitHub Release
          gh release upload "v$BUILD_VERSION+$BUILD_BUILD_NUMBER" "dil-tutor-app-v$BUILD_VERSION+$BUILD_BUILD_NUMBER.apk" --clobber
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Notify completion
        if: always()
        run: |
          if [ "${{ job.status }}" = "success" ]; then
            echo "‚úÖ Build and deployment completed successfully!"
            case "${{ github.event.inputs.deploy_target }}" in
              "google-play")
                echo "üì± App submitted to Google Play Store"
                echo "üè™ Available for review and release"
                ;;
              "github-releases")
                echo "üì¶ APK uploaded to GitHub Releases"
                echo "‚¨áÔ∏è Available for direct download"
                ;;
              "build-only")
                echo "üî® Build completed successfully"
                echo "üì± APK available in EAS Build dashboard"
                ;;
            esac
          else
            echo "‚ùå Build or deployment failed"
            echo "Please check the logs above for details"
          fi
